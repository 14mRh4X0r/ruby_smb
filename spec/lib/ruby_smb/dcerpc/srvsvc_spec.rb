require 'spec_helper'

RSpec.describe RubySMB::Dcerpc::Srvsvc do
  # let(:srvsvc_stub) {RubySMB::Dcerpc::Srvsvc::NetShareEnumAll.new}
  # let(:server_unc) { '127.0.0.1' }
  #
  # describe '#initialize' do
  #   it 'it is 8-octet aligned' do
  #     expect(srvsvc_stub.do_num_bytes % 8).to eq 0
  #   end
  # end

  #let(:raw_ioctl_response) {"\x00\x00\x02(\xFESMB@\x00\x01\x00\x00\x00\x00\x00\v\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x10\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x17\xC0\x11\x00\xF5\x01\x00\x00@\x00\x00\x00\x01\x00\x00\x00\xFF\xFF\xFF\xFFp\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\xB8\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x02\x03\x10\x00\x00\x00\xB8\x01\x00\x00\x00\x00\x00\x00\xA0\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x02\x00\x06\x00\x00\x00\x04\x00\x02\x00\x06\x00\x00\x00\b\x00\x02\x00\x00\x00\x00\x80\f\x00\x02\x00\x10\x00\x02\x00\x00\x00\x00\x00\x14\x00\x02\x00\x18\x00\x02\x00\x00\x00\x00\x80\x1C\x00\x02\x00 \x00\x02\x00\x00\x00\x00\x00$\x00\x02\x00(\x00\x02\x00\x03\x00\x00\x80,\x00\x02\x000\x00\x02\x00\x00\x00\x00\x004\x00\x02\x00\a\x00\x00\x00\x00\x00\x00\x00\a\x00\x00\x00A\x00D\x00M\x00I\x00N\x00$\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00R\x00e\x00m\x00o\x00t\x00e\x00 \x00A\x00d\x00m\x00i\x00n\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00C\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00C\x00$\x00\x00\x00\x00\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x0E\x00\x00\x00D\x00e\x00f\x00a\x00u\x00l\x00t\x00 \x00s\x00h\x00a\x00r\x00e\x00\x00\x00\a\x00\x00\x00\x00\x00\x00\x00\a\x00\x00\x00d\x00o\x00g\x00e\x006\x004\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00I\x00P\x00C\x00$\x00\x00\x00\x00\x00\v\x00\x00\x00\x00\x00\x00\x00\v\x00\x00\x00R\x00e\x00m\x00o\x00t\x00e\x00 \x00I\x00P\x00C\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00U\x00s\x00e\x00r\x00s\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x008\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00"}
  let(:raw_ioctl_response) {'00000228fe534d4240000100000000000b00020009000000000000000700000000000000fffe000001000000210000000004000023329addba563478cedd4cefdbdd9cc93100000017c01100850000000000000001000000ffffffff700000000000000070000000b801000000000000000000000500020310000000b801000000000000a00100000000000001000000010000000000020006000000040002000600000008000200000000800c00020010000200000000001400020018000200000000801c00020020000200000000002400020028000200030000802c000200300002000000000034000200070000000000000007000000410044004d0049004e002400000000000d000000000000000d000000520065006d006f00740065002000410064006d0069006e0000000000020000000000000002000000430000000100000000000000010000000000000003000000000000000300000043002400000000000e000000000000000e000000440065006600610075006c007400200073006800610072006500000007000000000000000700000064006f00670065003600340000000000010000000000000001000000000000000500000000000000050000004900500043002400000000000b000000000000000b000000520065006d006f00740065002000490050004300000000000600000000000000060000005500730065007200730000000100000000000000010000000000000006000000380002000000000000000000'.strip.gsub(/([A-Fa-f0-9]{1,2})\s*?/) { $1.hex.chr }}
  #we remove first 4 characters
  let(:stripped_raw_ioctl_response) {raw_ioctl_response[4..-1]}
  let(:ioctl_response) {RubySMB::SMB2::Packet::IoctlResponse.read(stripped_raw_ioctl_response)}
  let(:buffer) {ioctl_response.buffer}
  let(:dcerpc_response) {RubySMB::Dcerpc::Response.read(buffer)}
  let(:netshareenumall_response) {RubySMB::Dcerpc::Srvsvc::NetShareEnumAllResponse.read(dcerpc_response.stub.to_binary_s)}

  describe 'when parsing a raw ioctl response' do
    it 'correctly parses a dcerpc response' do
      require 'pry'
      binding.pry
    end
  end

end
